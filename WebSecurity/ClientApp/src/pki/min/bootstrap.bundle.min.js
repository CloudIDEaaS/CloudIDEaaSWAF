let params = new URL(document.location).searchParams, test = params.get("test"); function runStartupTests() { import("./bundle/bundle.js").then(async n => { try { var r, o, a, s, i;[[192, "z"], [3361923221, "=AjBcz8XK5g"], [-33619, "=AjBcz8XK5g"]].forEach(([t, e]) => { r = n.dec2bin(t), i = n.bin2dec(r), -1 == Math.sign(t) && (t = n.unsigned(t), i != t) && alert("bin2dec, dec2bin in runStartupTests did not match"), i != t && alert("bin2dec, dec2bin in runStartupTests did not match"), String.fromCharCode(e.charCodeAt(0)) == e && (o = n.xor(r, e), isNaN(o) && alert("xor in runStartupTests is not a number"), s = n.xor(r, String.fromCharCode(o)), isNaN(s) && alert("xor check playback in runStartupTests is not a number"), String.fromCharCode(s) != e) && alert("xor check in runStartupTests failed"), a = n.xora(r, e), (s = n.xora(r, a)) != e && alert("playback length in runStartupTests did not match") }) } catch (t) { alert("Error in runStartupTests: " + t) } }) } "true" == test && runStartupTests(), console.debug("looking for DomContent"), document.addEventListener("DOMContentLoaded", t => { console.debug("DomContent loaded. Importing bundle"), import("./bundle/bundle.js").then(async t => { var e, n; console.debug("Bundle imported"); try { if (console.debug("Bundle being handled"), [e, n] = await t.handle(3361923221), "error" === e) throw console.error(e), "You are not authorized to use this app"; window["α"] = e, window["β"] = n } catch (t) { window["ξ"] = t, console.error(t) } }) });